#include "stm32f10x.h"
#include "stm32f1xx_hal.h"
#include <rtthread.h>

#define THREAD_PRIORITY			6
#define THREAD_STACK_SIZE		512
#define THREAD_TIMESLICE		5

static rt_thread_t tidl = RT_NULL;

static void thread1_entry(void *parameter)
{
	
	rt_kprintf("thread1 entry\n");
	while(1)
	{
		rt_thread_mdelay(500);
		GPIOA->ODR |= 0x00;
		rt_thread_mdelay(1000);
		GPIOA->ODR |= 0x02;
		rt_thread_mdelay(1000);
	}
}

ALIGN(RT_ALIGN_SIZE)
static char thread2_stack[1024];
static struct rt_thread thread2;

static void thread2_entry(void *param)
{
	
	rt_kprintf("Hello RT-thread2!\r\n");
	
	while(1){

		GPIOA->ODR = 0x00;
		rt_thread_mdelay(1000);
		GPIOA->ODR = 0x04;
		rt_thread_mdelay(1000);
		
	}

}

int thread_sample(void)
{
	
	tidl = rt_thread_create("thread1",
													thread1_entry,RT_NULL,
													THREAD_STACK_SIZE,
													THREAD_PRIORITY, THREAD_TIMESLICE);
	
	if(tidl != RT_NULL)
		rt_thread_startup(tidl);
	
	rt_thread_init(&thread2,
								 "thread2",
								 thread2_entry,
								 RT_NULL,
								 &thread2_stack[0],
								 sizeof(thread2_stack),
								 THREAD_PRIORITY ,THREAD_TIMESLICE);
	rt_thread_startup(&thread2);
	
	return 0;
}

MSH_CMD_EXPORT(thread_sample, thread sample);
MSH_CMD_EXPORT(thread1_entry, thread1);
MSH_CMD_EXPORT(thread2_entry, thread2);

int main(void)
{
	while(1)
	{rt_thread_mdelay(1000);}
}
